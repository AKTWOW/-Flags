import Foundation

enum AuthProvider: String, Codable {
    case guest
    case google
    case apple
}

enum UserLevel: String, Codable, CaseIterable {
    case newbie = "–ù–æ–≤–∞—á–æ–∫"
    case explorer = "–î–æ—Å–ª—ñ–¥–Ω–∏–∫"
    case expert = "–ï–∫—Å–ø–µ—Ä—Ç"
    case master = "–ú–∞–π—Å—Ç–µ—Ä"
    case guru = "–ì–µ–æ–≥—Ä–∞—Ñ-–ì—É—Ä—É"
}

struct Achievement: Identifiable, Codable {
    let id: String
    let title: String
    let description: String
    let icon: String
    var progress: Double // –í—ñ–¥ 0 –¥–æ 1
    var isUnlocked: Bool
    let target: Int // –¶—ñ–ª—å–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
    
    static let livingAtlas = Achievement(
        id: "living_atlas",
        title: "–ñ–∏–≤–∏–π –ê—Ç–ª–∞—Å",
        description: "–ó–Ω–∞—î—à 100 –∫—Ä–∞—ó–Ω —Å–≤—ñ—Ç—É! –¢–∏ –≤–∂–µ —è–∫ —Ö–æ–¥—è—á–∏–π –≥–µ–æ–≥—Ä–∞—Ñ—ñ—á–Ω–∏–π –¥–æ–≤—ñ–¥–Ω–∏–∫!",
        icon: "üó∫Ô∏è",
        progress: 0,
        isUnlocked: false,
        target: 100
    )
    
    static let geographyWitcher = Achievement(
        id: "geography_witcher",
        title: "–í—ñ–¥—å–º–∞–∫ –≥–µ–æ–≥—Ä–∞—Ñ—ñ—ó",
        description: "–í–∏ –ø—ñ–¥–∫–æ—Ä–∏–ª–∏ –≤—Å—é –Ñ–≤—Ä–æ–ø—É! –¢–µ–ø–µ—Ä –≤–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –∑–Ω–∞–≤–µ—Ü—å –°—Ç–∞—Ä–æ–≥–æ –°–≤—ñ—Ç—É!",
        icon: "üîÆ",
        progress: 0,
        isUnlocked: false,
        target: CountryService.shared.countries.filter { $0.continent == .europe }.count
    )
    
    static let traveler = Achievement(
        id: "traveler",
        title: "–ü–æ–¥–æ—Ä–æ–∂–Ω–∏–∫",
        description: "–í—ñ–¥–∫—Ä–∏–≤ —É—Å—ñ –∫—Ä–∞—ó–Ω–∏ –ê–≤—Å—Ç—Ä–∞–ª—ñ—ó —Ç–∞ –û–∫–µ–∞–Ω—ñ—ó! –¢–µ–ø–µ—Ä —Ç–∏ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ –∞–≤—Å—Ç—Ä–∞–ª—ñ–π—Å—å–∫–∏–π –±—É—à—Ä–µ–π–Ω–¥–∂–µ—Ä!",
        icon: "ü¶ò",
        progress: 0,
        isUnlocked: false,
        target: CountryService.shared.countries.filter { $0.continent == .oceania }.count
    )
    
    static let seaConqueror = Achievement(
        id: "sea_conqueror",
        title: "–ó–∞–≤–æ–π–æ–≤–Ω–∏–∫ –º–æ—Ä—ñ–≤",
        description: "–í–∏ –≤–∏–≤—á–∏–ª–∏ –≤—Å—é –ê—Ñ—Ä–∏–∫—É! –í—ñ–¥ –°–∞—Ö–∞—Ä–∏ –¥–æ –º–∏—Å—É –î–æ–±—Ä–æ—ó –ù–∞–¥—ñ—ó!",
        icon: "üåä",
        progress: 0,
        isUnlocked: false,
        target: CountryService.shared.countries.filter { $0.continent == .africa }.count
    )
    
    static let cartographySherlock = Achievement(
        id: "cartography_sherlock",
        title: "–®–µ—Ä–ª–æ–∫ –∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ—ñ—ó",
        description: "–í–∏ —Ä–æ–∑–∫—Ä–∏–ª–∏ –≤—Å—ñ —Ç–∞—î–º–Ω–∏—Ü—ñ –ê–∑—ñ—ó! –í—ñ–¥ –ë–ª–∏–∑—å–∫–æ–≥–æ –°—Ö–æ–¥—É –¥–æ –î–∞–ª–µ–∫–æ–≥–æ!",
        icon: "üïµÔ∏è‚Äç‚ôÇÔ∏è",
        progress: 0,
        isUnlocked: false,
        target: CountryService.shared.countries.filter { $0.continent == .asia }.count
    )
    
    static let alienTourist = Achievement(
        id: "alien_tourist",
        title: "–ü–æ–∑–∞–∑–µ–º–Ω–∏–π —Ç—É—Ä–∏—Å—Ç",
        description: "–í—ñ–¥–∫—Ä–∏–≤ —É—Å—ñ –∫—Ä–∞—ó–Ω–∏ —Å–≤—ñ—Ç—É (195/195)! –ó–¥–∞—î—Ç—å—Å—è, —Ç–æ–±—ñ –≤–∂–µ –≤–∞—Ä—Ç–æ –≤–∏–≤—á–∞—Ç–∏ –∫—Ä–∞—ó–Ω–∏ –Ω–∞ –ú–∞—Ä—Å—ñ!",
        icon: "üõ∏",
        progress: 0,
        isUnlocked: false,
        target: 195
    )
    
    static let dailyChallenge = Achievement(
        id: "daily_challenge",
        title: "–©–æ–¥–µ–Ω–Ω–∏–π –≤–∏–∫–ª–∏–∫",
        description: "–ó–∞—Ö–æ–¥—å —É –¥–æ–¥–∞—Ç–æ–∫ 7 –¥–Ω—ñ–≤ –ø–æ—Å–ø—ñ–ª—å!",
        icon: "üéØ",
        progress: 0,
        isUnlocked: false,
        target: 7
    )
    
    static let all: [Achievement] = [
        livingAtlas,
        geographyWitcher,
        traveler,
        seaConqueror,
        cartographySherlock,
        alienTourist,
        dailyChallenge
    ]
}

struct Profile: Codable {
    var id: String
    var name: String
    var email: String?
    var phoneNumber: String?
    var dateOfBirth: Date?
    var avatarName: String
    var authProvider: AuthProvider
    var isPro: Bool
    var level: UserLevel
    var achievements: [Achievement]
    
    // –ù–æ–≤—ñ –ø–æ–ª—è –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É
    var knownCountries: Set<String>
    var unknownCountries: Set<String>
    var completedContinents: Set<String>
    var visitedCountries: Set<String>
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    var correctAnswersStreak: Int
    var maxCorrectAnswersStreak: Int
    var capitalGuessCount: Int?
    var silhouetteGuessCount: Int?
    var lastLoginDate: Date?
    var createdAt: Date
    var updatedAt: Date
    
    // –û–±—á–∏—Å–ª—é–≤–∞–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
    var progress: Double {
        let totalCountries = 195.0 // –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—Ä–∞—ó–Ω —É —Å–≤—ñ—Ç—ñ
        return Double(knownCountries.count) / totalCountries
    }
    
    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –∑–Ω–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∫—Ä–∞—ó–Ω—É
    func knowsCountry(_ countryId: String) -> Bool {
        return knownCountries.contains(countryId)
    }
    
    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç
    func hasCompletedContinent(_ continentId: String) -> Bool {
        return completedContinents.contains(continentId)
    }
    
    static func createGuest() -> Profile {
        Profile(
            id: UUID().uuidString,
            name: "–ì—ñ—Å—Ç—å",
            email: nil,
            phoneNumber: nil,
            dateOfBirth: nil,
            avatarName: "üòä",
            authProvider: .guest,
            isPro: false,
            level: .newbie,
            achievements: Achievement.all,
            knownCountries: [],
            unknownCountries: [],
            completedContinents: [],
            visitedCountries: [],
            correctAnswersStreak: 0,
            maxCorrectAnswersStreak: 0,
            capitalGuessCount: 0,
            silhouetteGuessCount: 0,
            lastLoginDate: Date(),
            createdAt: Date(),
            updatedAt: Date()
        )
    }
    
    mutating func update(with profile: Profile) {
        self.name = profile.name
        self.email = profile.email
        self.phoneNumber = profile.phoneNumber
        self.dateOfBirth = profile.dateOfBirth
        self.avatarName = profile.avatarName
        self.isPro = profile.isPro
        self.level = profile.level
        self.achievements = profile.achievements
        self.knownCountries = profile.knownCountries
        self.unknownCountries = profile.unknownCountries
        self.completedContinents = profile.completedContinents
        self.visitedCountries = profile.visitedCountries
        self.correctAnswersStreak = profile.correctAnswersStreak
        self.maxCorrectAnswersStreak = profile.maxCorrectAnswersStreak
        self.capitalGuessCount = profile.capitalGuessCount
        self.silhouetteGuessCount = profile.silhouetteGuessCount
        self.lastLoginDate = profile.lastLoginDate
        self.updatedAt = Date()
    }
} 